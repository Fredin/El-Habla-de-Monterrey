{
    "contents" : "#install.packages(\"tm\")\n#install.packages(\"stringi\")\n#install.packages(\"wordcloud\")\n\nlibrary(tm)\nlibrary(stringi)\nlibrary(wordcloud)\n\n##### Create cropus ######\nhablaMty <- Corpus(DirSource(\"~/hablaMty/TEXT\"),\n                   readerControl = list(reader = readPlain,\n                                        language = \"spa\",\n                                        load = FALSE,\n                                        encoding = \"UTF-8\"))\n\n##### Setting metadata tags ######\nfor (i in seq_along(hablaMty)) {\n    splitID <- strsplit(meta(hablaMty[[i]], \"id\"), \"\")\n    meta(hablaMty[[i]], tag = \"sexo\") <- splitID[[1]][6]\n    meta(hablaMty[[i]], tag = \"grupo_edad\") <- splitID[[1]][7]\n    meta(hablaMty[[i]], tag = \"nivel_edu\") <- splitID[[1]][8]\n}\n\n##### Unicode fixing #####\nfixUnicode<- function (x){\n    x<-stri_escape_unicode(x)\n    x<-gsub(\"\\\\u00c3\\\\u00a1\", \"\\\\u00e1\", x, fixed = TRUE) # a w acute accent\n    x<-gsub(\"\\\\u00c3\\\\u00a9\", \"\\\\u00e9\", x, fixed = TRUE) # e w acute accent\n    x<-gsub(\"\\\\u00c3\\\\u00ad\", \"\\\\u00ed\", x, fixed = TRUE) # i w acute accent\n    x<-gsub(\"\\\\u00c3\\\\u00b3\", \"\\\\u00f3\", x, fixed = TRUE) # o w acute accent\n    x<-gsub(\"\\\\u00c3\\\\u00ba\", \"\\\\u00fa\", x, fixed = TRUE) # u w acute accent \n    x<-gsub(\"\\\\u00c3\\\\u00b1\", \"\\\\u00f1\", x, fixed = TRUE) # n w tilde\n    x<-gsub(\"\\\\u00c2\\\\u00bf\", \"\\\\u00bf\", x, fixed = TRUE) # inverted questionm.\n    x<-gsub(\"\\\\u00c2\\\\u00a1\", \"\\\\u00a1\", x, fixed = TRUE) # inverted bang\n    x<-gsub(\"\\\\u00e2\\\\u20ac\\\\u0153\", \"\\\\u201c\", x, fixed = TRUE) # o.d.quot. m.\n    x<-gsub(\"\\\\u00e2\\\\u20ac\\\\u009d\", \"\\\\u201d\", x, fixed = TRUE) # c.d.quot. m.\n    x<-gsub(\"\\\\u00c3\\\\u00bc\", \"\\\\u00fc\", x, fixed = TRUE) # u w dieresis\n    x<-gsub(\"\\\\u00e2\\\\u20ac\\\\u2122\", \"'\", x, fixed = TRUE) # u w dieresis\n    x<-stri_unescape_unicode(x)\n    return(x)\n}\n\nf <- content_transformer(function(x, pattern) gsub(pattern, \"\", x))\n\n###### Transformations #######\nhablaMty <- tm_map(hablaMty, f, \"^E:.*\") # get rid of interviewer\nhablaMty <- tm_map(hablaMty, f, \"<.*>\") # get rid of annotations\nhablaMty <- tm_map(hablaMty, content_transformer(fixUnicode))\n\n####### Subsetting by groups #######\nh11 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"H\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"1\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"1\"]\n\nh12 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"H\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"1\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"2\"]\n\nh13 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"H\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"1\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"3\"]\n\nh21 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"H\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"2\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"1\"]\n\nh22 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"H\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"2\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"2\"]\n\nh23 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"H\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"2\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"3\"]\n\nh31 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"H\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"3\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"1\"]\n\nh32 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"H\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"3\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"2\"]\n\nh33 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"H\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"3\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"3\"]\n\nm11 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"M\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"1\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"1\"]\n\nm12 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"M\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"1\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"2\"]\n\nm13 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"M\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"1\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"3\"]\n\nm21 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"M\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"2\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"1\"]\n\nm22 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"M\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"2\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"2\"]\n\nm23 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"M\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"2\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"3\"]\n\nm31 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"M\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"3\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"1\"]\n\nm32 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"M\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"3\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"2\"]\n\nm33 <- hablaMty[meta(hablaMty, tag = \"sexo\") == \"M\" & \n                    meta(hablaMty, tag = \"grupo_edad\") == \"3\" &\n                    meta(hablaMty, tag = \"nivel_edu\") == \"3\"]\n\n###### Create term-document matrix and plot wordcloud ######\ngrupos <- list(h11, h12, h13, h21, h22, h23, h31, h32, h33, m11, m12, m13, m21, \n               m22, m23, m31, m32, m33)\nnombres <- c(\"h11\", \"h12\", \"h13\", \"h21\", \"h22\", \"h23\", \"h31\", \"h32\", \"h33\", \n              \"m11\", \"m12\", \"m13\", \"m21\", \"m22\", \"m23\", \"m31\", \"m32\", \"m33\")\npalabrasParo <-read.table(\"~/hablaMty/stopwords/palabrasParo.txt\", \n                          encoding = \"UTF-8\", colClasses = \"character\")\n\nfor (i in seq_along(grupos)){\n    \n    tdm <- TermDocumentMatrix(grupos[[i]],\n                control = list(removePunctuation = TRUE,\n                stopwords = c(\"pos\",\"allá\",\"digo\",\"nomás\",\"mjm\", palabrasParo[,1]),\n                removeNumbers = TRUE, tolower = TRUE,\n                content_transformer(stripWhitespace)))\n    m <- as.matrix(tdm)\n    word_freqs <- sort(rowSums(m), decreasing = TRUE) \n    dm <- data.frame(word = names(word_freqs), freq = word_freqs)\n    top <- dm[1:100,]\n    png(paste0(\"~/hablaMty/img/\",nombres[i],\".png\"), width=12, height=8, \n        units=\"in\", res = 300)\n    wordcloud(top$word, top$freq, random.order=FALSE, \n              colors = brewer.pal(8, \"Dark2\"))\n    dev.off()\n}\n\n##### Pruebas ######\n",
    "created" : 1440626262442.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2940386986",
    "id" : "3BAA869D",
    "lastKnownWriteTime" : 1441910225,
    "path" : "~/hablaMty/wordClouds.R",
    "project_path" : "wordClouds.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}