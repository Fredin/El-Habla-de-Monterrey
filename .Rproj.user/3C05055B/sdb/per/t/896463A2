{
    "collab_server" : "",
    "contents" : "# un comment these if not installed\n#install.packages(\"tm\")\n#install.packages(\"stringi\")\n#install.packages(\"wordcloud\")\n\nlibrary(tm)\nlibrary(stringi)\nlibrary(wordcloud)\n\n##### Create cropus ######\nhablaMty <- Corpus(DirSource(\"~/hablaMty/text\"),\n                   readerControl = list(reader = readPlain,\n                                        language = \"spa\",\n                                        load = FALSE,\n                                        encoding = \"UTF-8\"))\n\n##### Setting metadata tags ######\nfor (i in seq_along(hablaMty)) {\n    splitID <- strsplit(meta(hablaMty[[i]], \"id\"), \"\")\n    meta(hablaMty[[i]], tag = \"sexo\") <- splitID[[1]][6]\n    meta(hablaMty[[i]], tag = \"grupo_edad\") <- splitID[[1]][7]\n    meta(hablaMty[[i]], tag = \"nivel_edu\") <- splitID[[1]][8]\n}\n\n##### Unicode fixing functions#####\nfixUnicode<- content_transformer(function (x){\n    x<-stri_escape_unicode(x)\n    x<-gsub(\"\\\\u00c3\\\\u00a1\", \"\\\\u00e1\", x, fixed = TRUE) # a w acute accent\n    x<-gsub(\"\\\\u00c3\\\\u00a9\", \"\\\\u00e9\", x, fixed = TRUE) # e w acute accent\n    x<-gsub(\"\\\\u00c3\\\\u00ad\", \"\\\\u00ed\", x, fixed = TRUE) # i w acute accent\n    x<-gsub(\"\\\\u00c3\\\\u00b3\", \"\\\\u00f3\", x, fixed = TRUE) # o w acute accent\n    x<-gsub(\"\\\\u00c3\\\\u00ba\", \"\\\\u00fa\", x, fixed = TRUE) # u w acute accent \n    x<-gsub(\"\\\\u00c3\\\\u00b1\", \"\\\\u00f1\", x, fixed = TRUE) # n w tilde\n    x<-gsub(\"\\\\u00c2\\\\u00bf\", \"\\\\u00bf\", x, fixed = TRUE) # inverted questionm.\n    x<-gsub(\"\\\\u00c2\\\\u00a1\", \"\\\\u00a1\", x, fixed = TRUE) # inverted bang\n    x<-gsub(\"\\\\u00e2\\\\u20ac\\\\u0153\", \"\\\\u201c\", x, fixed = TRUE) # o.d.quot. m.\n    x<-gsub(\"\\\\u00e2\\\\u20ac\\\\u009d\", \"\\\\u201d\", x, fixed = TRUE) # c.d.quot. m.\n    x<-gsub(\"\\\\u00c3\\\\u00bc\", \"\\\\u00fc\", x, fixed = TRUE) # u w dieresis\n    x<-gsub(\"\\\\u00e2\\\\u20ac\\\\u2122\", \"'\", x, fixed = TRUE) # u w dieresis\n    x<-stri_unescape_unicode(x)\n    return(x)\n})\n\nf <- content_transformer(function(x, pattern) gsub(pattern, \"\", x))\n\n###### Transformations #######\nhablaMty <- tm_map(hablaMty, f, \"^E:.*\") # get rid of interviewer\nhablaMty <- tm_map(hablaMty, f, \"<.*>\") # get rid of annotations\nhablaMty <- tm_map(hablaMty, fixUnicode)\n\n####### Subsetting by groups #######\n\nsubsetter <- function(sexo, edad, edu){\n    x<-hablaMty[meta(hablaMty, tag = \"sexo\") == sexo & \n                 meta(hablaMty, tag = \"grupo_edad\") == edad &\n                 meta(hablaMty, tag = \"nivel_edu\") == edu]\n    return(x)\n}\n\nnombres <- c(\"H11\", \"H12\", \"H13\", \"H21\", \"H22\", \"H23\", \"H31\", \"H32\", \"H33\", \n             \"M11\", \"M12\", \"M13\", \"M21\", \"M22\", \"M23\", \"M31\", \"M32\", \"M33\")\n\ngrupos<- list()\n\nfor (i in seq_along(nombres)){\n    sexo<-substr(nombres[i],1,1)\n    edad<-substr(nombres[i],2,2)\n    edu<-substr(nombres[i],3,3)\n    \n    grupos[[i]] <- assign(nombres[i], subsetter(sexo,edad,edu))\n    \n}\n\n##### getText ######\n### This little function lets you recover text from a corpus. \n### \"x\" is a corpus object,\"lema\" is the regex for the strings you are trying\n### to match, e.g. getText(H11,\"ching+[a-z]\")\n\ngetText <- function (x, lema, ignore.case = TRUE) {\n    mydf <- data.frame(NULL)\n    for (i in seq_along(x)){\n        linea <-grep(lema, as.character(x[[i]]), ignore.case = ignore.case)\n        texto <-grep(lema, as.character(x[[i]]), ignore.case = ignore.case,\n                      value = T)\n        grupo <- rep(deparse(substitute(x)), length(linea))\n        numDoc <- rep(i, length(linea))\n        tmpdf <- data.frame(as.character(texto), grupo, numDoc, linea)\n        mydf <- rbind(mydf, tmpdf)\n    }\n    return(mydf)\n}",
    "created" : 1495126177567.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3637109415",
    "id" : "896463A2",
    "lastKnownWriteTime" : 1495474026,
    "last_content_update" : 1495474026475,
    "path" : "~/hablaMty/code/corpusBuilder.R",
    "project_path" : "code/corpusBuilder.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}